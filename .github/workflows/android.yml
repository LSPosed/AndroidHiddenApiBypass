name: Build

on:
  pull_request:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:
    - name: Check out
      uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    - name: Build with Gradle
      run: |
        echo 'org.gradle.caching=true' >> gradle.properties
        echo 'org.gradle.parallel=true' >> gradle.properties
        echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
        ./gradlew publishToMavenLocal
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.maven_pgp_signingKey }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.maven_pgp_signingPassword }}
    - name: Upload library
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-library
        path: ~/.m2
        include-hidden-files: true

  test:
    name: Test on API ${{ matrix.api-level }} ${{ matrix.arch }}
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - api-level: 28
            target: default
            arch: x86_64
          - api-level: 28
            target: default
            arch: x86
          - api-level: 29
            target: default
            arch: x86_64
          - api-level: 29
            target: default
            arch: x86
          - api-level: 30
            target: aosp_atd
            arch: x86_64
          - api-level: 30
            target: google_apis
            arch: x86
          - api-level: 31
            target: aosp_atd
            arch: x86_64
          - api-level: 31
            target: android-tv
            arch: x86
          - api-level: 32
            target: aosp_atd
            arch: x86_64
          - api-level: 33
            target: aosp_atd
            arch: x86_64
          - api-level: 33
            target: android-tv
            arch: x86
          - api-level: 34
            target: aosp_atd
            arch: x86_64
          - api-level: 35
            target: aosp_atd
            arch: x86_64
          - api-level: Baklava
            target: google_apis
            arch: x86_64
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Enable KVM group perms
        run: |
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm
      - name: run tests
        uses: reactivecircus/android-emulator-runner@b683a061eaff4aac4d0b585bfd0cf714a40aee93
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.target }}
          script: ./gradlew connectedCheck
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true

  cf-test:
    name: Test ${{ matrix.device }}
    runs-on: ubuntu-24.04
    needs: build
    env:
      CF_HOME: /home/runner/aosp_cf_phone
    strategy:
      fail-fast: false
      matrix:
        include:
          - branch: "aosp-main"
            device: "aosp_cf_x86_64_phone"

    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Cuttlefish environment
        run: |
          .github/cuttlefish.sh setup
          .github/cuttlefish.sh download ${{ matrix.branch }} ${{ matrix.device }}
      - name: Run Cuttlefish test
        timeout-minutes: 10
        run: su $USER -c '.github/cuttlefish.sh test'
      - name: Upload logs on error
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: "cvd-logs-${{ matrix.device }}"
          path: |
            /home/runner/aosp_cf_phone/cuttlefish/instances/cvd-1/logs
            /home/runner/aosp_cf_phone/cuttlefish/instances/cvd-1/cuttlefish_config.json
